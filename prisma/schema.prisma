generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "fullTextSearch", "views"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model User {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nickname   String      @db.VarChar()
  username   String      @db.VarChar()
  password   String      @db.VarChar()
  todos      Todo[]
  challenges Challenge[]

  @@map("otd_users")
}

model Game {
  code      String      @id @db.VarChar()
  title     String      @db.VarChar()
  logo      String?     @db.VarChar()
  songs     Song[]
  challenge Challenge[]

  @@map("otd_games")
}

model Song {
  id            String   @id @db.VarChar()
  title         String   @db.VarChar()
  cover         String?  @db.VarChar()
  category      String?  @db.VarChar()
  artist        String   @db.VarChar()
  game_code     String   @db.VarChar()
  added_date    DateTime
  added_version String   @db.VarChar()
  game          Game     @relation(fields: [game_code], references: [code])
  charts        Chart[]

  @@map("otd_songs")
}

model Chart {
  id             String          @id @db.VarChar()
  mode           String?         @db.VarChar()
  difficulty     String          @db.VarChar()
  level          String          @db.VarChar()
  detailed_level String?         @db.VarChar()
  song           Song            @relation(fields: [song_id], references: [id])
  song_id        String          @db.VarChar()
  todos          Todo[]
  items          ChallengeItem[]

  @@map("otd_charts")
}

model Todo {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String    @db.Uuid()
  user           User      @relation(fields: [user_id], references: [id])
  chart_id       String    @db.VarChar()
  chart          Chart     @relation(fields: [chart_id], references: [id])
  goal           String    @db.VarChar()
  completed      Boolean   @default(false)
  created_date   DateTime  @default(now())
  completed_date DateTime?

  @@index(created_date)
  @@map("otd_todos")
}

model Challenge {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String          @db.VarChar()
  game_code     String          @db.VarChar()
  game          Game            @relation(fields: [game_code], references: [code])
  description   String          @db.VarChar()
  uploader_id   String          @db.Uuid()
  uploader      User            @relation(fields: [uploader_id], references: [id])
  ChallengeItem ChallengeItem[]

  @@map("otd_challenges")
}

model ChallengeItem {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  chart        Chart     @relation(fields: [chart_id], references: [id])
  chart_id     String    @db.VarChar()
  challenge    Challenge @relation(fields: [challenge_id], references: [id])
  challenge_id String    @db.Uuid
  goal         String    @db.VarChar()

  @@map("otd_challenge_items")
}
